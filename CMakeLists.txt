cmake_minimum_required(VERSION 3.13)

project(TAT LANGUAGES CXX)

set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${PROJECT_SOURCE_DIR}")
find_package(TAT)

# compile PyTAT
if(TARGET PyTAT)
  set_target_properties(PyTAT PROPERTIES EXCLUDE_FROM_ALL OFF)
endif()

# examples/*.cpp and test/*.cpp
link_libraries(TAT)

file(GLOB CPP_SRC ${PROJECT_SOURCE_DIR}/examples/*.cpp ${PROJECT_SOURCE_DIR}/test/*.cpp)
foreach(FILE ${CPP_SRC})
   get_filename_component(NAME ${FILE} NAME_WE)
   add_executable(${NAME} ${FILE})
endforeach(FILE)

# and their test
enable_testing()
function(add_compare_test name)
   add_test(build_test_${name} ${CMAKE_COMMAND} --build ${CMAKE_BINARY_DIR} --target test_${name})
   add_test(test_${name} ${PROJECT_BINARY_DIR}/test_${name} ${PROJECT_SOURCE_DIR}/test/test_${name}.out)
   set_tests_properties(test_${name} PROPERTIES DEPENDS build_test_${name})
endfunction()
add_compare_test(qr)
add_compare_test(exp)
add_compare_test(fused_contract)
add_compare_test(text_io)
add_compare_test(create_normal_tensor)
add_compare_test(create_symmetry_tensor)
add_compare_test(create_fermi_tensor)
add_compare_test(type_conversion)
add_compare_test(norm)
add_compare_test(scalar)
add_compare_test(binary_io)
add_compare_test(edge_rename)
add_compare_test(transpose)
add_compare_test(split_and_merge)
add_compare_test(edge_operator)
add_compare_test(contract)
add_compare_test(svd)
add_compare_test(customed_name)
add_compare_test(mpi)
add_compare_test(trace)
